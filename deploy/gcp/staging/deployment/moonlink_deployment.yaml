apiVersion: apps/v1
kind: Deployment
metadata:
  name: moonlink-deployment-staging
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 20%
  selector:
    matchLabels:
      app: moonlink-deployment-staging
  template:
    metadata:
      labels:
        app: moonlink-deployment-staging
    spec:
      containers:
      # Moonlink deployment, which serves REST API and TCP rpc requests.
      - name: moonlink-deployment-staging
        image: us-west1-docker.pkg.dev/coral-ring-465417-r0/moonlink-standalone-experiment/moonlink-deployment-staging:7cb80acf-9d2e-4dfe-b19a-ad8e6578415d
        command: ["/app/moonlink_service"]
        args:
        - "/tmp/moonlink"
        - "--no-rest-api"
        - "--tcp-port=3031"
        # TODO(hjiang): Revisit before release and production deployment, use a dummy guaranteed QoS for now. 
        resources:
          requests:
            cpu: "200m"
            memory: "1Gi"
          limits:
            cpu: "200m"
            memory: "1Gi"
        env:
        volumeMounts:
        - name: shared-cache-directory
          mountPath: /tmp/moonlink
        ports:
        # Port number for REST API server.
        - containerPort: 3030
        # Port number for TCP rpc server.
        - containerPort: 3031
        # Port number for readiness probe.
        - containerPort: 5050 
        readinessProbe:
          httpGet:
            path: /ready
            port: 5050
          initialDelaySeconds: 2
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3

      # Data server, which serves data plane requests.
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        # nginx serves local files under certain directory.
        - name: shared-cache-directory
          mountPath: /usr/share/nginx/html

      volumes:
      # Shared cache directory between data server and moonlink.
      - name: shared-cache-directory
        emptyDir: {}
